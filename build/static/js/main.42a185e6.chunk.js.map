{"version":3,"sources":["app-components/home.js","app-components/screenshotter.js","app-components/sign-up-form.js","app-components/success.js","app-components/About.js","App.js","index.js"],"names":["mapboxgl","accessToken","process","Map","Component","constructor","props","super","this","state","lng","lat","zoom","mapContainer","React","createRef","componentDidMount","map","container","current","style","center","scale","ScaleControl","maxWidth","unit","addControl","setUnit","async","resp","fetch","json","loadData","then","console","log","addSource","type","data","addLayer","bounds","turf","fitBounds","padding","duration","render","ref","className","to","Home","loaded","params","window","location","hash","replace","split","p","reduce","obj","key","value","returnCoords","string","array","parseFloat","setTimeout","reload","customData","userLoc","customDataFire","fireLoc","on","id","source","layout","paint","decodeURI","userLocName","fireLocName","bboxJson","features","screenshot","Div","document","createElement","getElementsByClassName","appendChild","postDiv","Screenshotter","Form","username","phoneNumber","radius","coordinates","handleChange","bind","handleSubmit","event","setState","target","name","address","token","method","body","JSON","stringify","response","origin","pathname","preventDefault","onSubmit","onChange","SignUpForm","Response","Success","Details","href","About","App","PureComponent","exact","path","element","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42a185e6.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport * as turf from '@turf/turf';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -98.78320225360663,\n      lat: 40.45646421496375, \n      zoom: 3.5\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: 'mapbox://styles/caseymmiler/cl11818ga000216ng2az1efhm',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    const scale = new mapboxgl.ScaleControl({\n      maxWidth: 150,\n      unit: 'imperial'\n    });\n    map.addControl(scale);\n      \n    scale.setUnit('imperial');\n\n    async function loadData() {\n      const resp = await fetch('https://firenearby.s3.amazonaws.com/latest.json');\n      const json = await resp.json();\n      return json;\n    }\n\n    loadData().then(json => {\n      // map.on('load', function () {\n      console.log('ran load')\n      map.addSource('data-json', {\n        type: 'geojson',\n        data: json,\n      });\n\n      // console.log(json)\n\n      map.addLayer({\n        'id': 'points',\n        'type': 'symbol',\n        'source': 'data-json',\n        'layout': {\n          'icon-image': 'orange-x-box2',\n          'text-field': ['get', 'IncidentName'],\n          'text-font': [\n            'Ubuntu Mono Bold',\n            'Arial Unicode MS Bold'\n          ],\n          'text-size': 16,\n          'text-offset': [0, 1.25],\n          'text-anchor': 'top',\n          'icon-allow-overlap': true,\n          'text-allow-overlap': true\n        }\n      });\n      \n      const bounds = turf.bbox(json);\n      map.fitBounds(bounds, { padding: 100, duration: 0 });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.mapContainer} className=\"map-container\" />\n        <div className=\"title\">\n          <h1>Wildfires in the last 24 hours</h1>\n        </div>\n        <div className=\"title-about\">\n          <Link className=\"signUp\" to=\"/sign-up\">\n            <span>Sign up</span>\n          </Link>\n          <Link className=\"about\" to=\"/about\">\n            <span>About</span>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Home = (props) => {\n   return(\n    <Map />\n   )\n}\n \nexport default Home;","import React from 'react';\nimport { Component } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport * as turf from '@turf/turf';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -98.78320225360663,\n      lat: 40.45646421496375, \n      zoom: 3.5\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    let loaded = false;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: 'mapbox://styles/caseymmiler/cl11818ga000216ng2az1efhm',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    const scale = new mapboxgl.ScaleControl({\n      maxWidth: 150,\n      unit: 'imperial'\n    });\n    map.addControl(scale);\n\n    // ?userLoc=xx,xx&fireLoc=xx,xx\n    const params = window.location.hash\n    .replace('#/screenshot?', '')\n    .split('&')\n    .map((p) => p.split('='))\n    .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\n\n    const returnCoords = (string) => {\n      let array = string.split(',');\n      console.log(array)\n      return [parseFloat(array[0]), parseFloat(array[1])];\n    }\n\n    console.log(params);\n\n    const postDiv = () => {\n      console.log('loaded')\n      // signal done\n      const Div = document.createElement('div');\n      Div.id = 'hidden';\n      document.getElementsByClassName('map-container')[0].appendChild(Div);\n    }\n\n    setTimeout(function(){\n      if(!loaded){\n        window.location.reload();\n      }\n    }, 3000)\n\n    const customData = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [\n        {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"category\": \"userLoc\"\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": returnCoords(params.userLoc)\n          }\n        }\n      ]\n    };\n\n    const customDataFire = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [\n        {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"category\": \"fireLoc\"\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": returnCoords(params.fireLoc)\n          }\n        }\n      ]\n    };\n\n    map.on('load', function () {\n      console.log('ran load')\n      loaded = true;\n\n      map.addSource('data-json', {\n        type: 'geojson',\n        data: customData\n      });\n\n      map.addLayer({\n        id: 'data-json-layer',\n        type: 'circle',\n        source: 'data-json', // reference the data source\n        layout: {},\n        paint: {\n          'circle-radius': 7,\n          'circle-color': '#5444e3',\n          'circle-stroke-color': '#ffffff',\n          'circle-stroke-width': 2\n        },\n      });\n\n      map.addLayer({\n        id: 'data-json-layer-text',\n        type: 'symbol',\n        source: 'data-json', // reference the data source\n        layout: {\n          'text-field': decodeURI(params.userLocName),\n          'text-font': [\n            'Ubuntu Mono Bold',\n            'Arial Unicode MS Bold'\n          ],\n          'text-size': 18,\n          'text-offset': [0, 1],\n          'text-anchor': 'top'\n        }\n      });\n\n      map.addSource('data-json-fire', {\n        type: 'geojson',\n        data: customDataFire\n      });\n\n      // Add a symbol layer\n      map.addLayer({\n        'id': 'points',\n        'type': 'symbol',\n        'source': 'data-json-fire',\n        'layout': {\n          'icon-image': 'orange-x-box2',\n          // get the title name from the source's \"title\" property\n          'text-field': decodeURI(params.fireLocName),\n          'text-font': [\n            'Ubuntu Mono Bold',\n            'Arial Unicode MS Bold'\n          ],\n          'text-size': 18,\n          'text-offset': [0, 1.25],\n          'text-anchor': 'top'\n        }\n      });\n\n      const bboxJson = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [\n          customData.features[0],\n          customDataFire.features[0]\n        ]\n      }\n          \n      const bounds = turf.bbox(bboxJson);\n      map.fitBounds(bounds, { padding: 120, duration: 0 });\n      if(params.screenshot){\n        setTimeout(function(){\n          console.log('posting div');\n          postDiv();\n        }, 5000)\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.mapContainer} className=\"map-container\" />\n      </div>\n    );\n  }\n}\n\nconst Screenshotter = (props) => {\n   return(\n    <Map />\n   )\n}\n \nexport default Screenshotter;","import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      location: '',\n      phoneNumber: '',\n      radius: '',\n      coordinates: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    const address = this.state.location;\n    this.state.phoneNumber = this.state.phoneNumber.replace(/[^+\\d]+/g, \"\");\n    \n    async function loadData(address) {\n      const token = process.env.REACT_APP_MAPBOX_KEY;\n      console.log(`https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=place%2Cpostcode%2Caddress&access_token=${token}`)\n      const resp = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${address}.json?types=place%2Cpostcode%2Caddress&access_token=${token}`);\n      const json = await resp.json();\n      return json;\n    }\n\n    loadData(address).then(json => {\n      this.state.coordinates = json.features[0].center;\n      // POST\n      fetch(process.env.REACT_APP_API_URL, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n      }).then((response) => {\n        window.location = `${window.location.origin}${window.location.pathname}#/success`;\n      });\n    })\n    event.preventDefault();\n  }\n\n\n  render() {\n    return (\n      <div className=\"signup\">\n        <h1>Sign up for alerts</h1>\n        <p>Please submit this form to sign up for text alerts of fires near your specified location.</p>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input type=\"text\" name='username' value={this.state.username} onChange={this.handleChange} />\n          </label>\n          <label>\n            Phone number:\n            <input type=\"text\" name='phoneNumber' value={this.state.phoneNumber} onChange={this.handleChange} />\n          </label>\n          <label>\n            Address (please include city and state):\n            <input type=\"text\" name='location' value={this.state.location} onChange={this.handleChange} />\n          </label>\n          <label>\n            Max distance (in miles):\n            <input type=\"text\" name='radius' value={this.state.radius} onChange={this.handleChange} />\n          </label>\n          <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst SignUpForm = (props) => {\n   return(\n    <Form />\n   )\n}\n \nexport default SignUpForm;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Response extends React.Component {\n  render() {\n    return (\n      <div className=\"success\">\n        <h1>Success!</h1>\n        <p>You are now signed up to receive alerts.</p>\n        <p>Feel free to close this page or\n        <Link className=\"home\" to=\"/\">\n         view the map of current fires\n        </Link>.\n        </p>\n      </div>\n    );\n  }\n}\n\nconst Success = () => {\n   return(\n    <Response />\n   )\n}\n \nexport default Success;","import React from 'react';\n\nclass Details extends React.Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <h1>About this project</h1>\n        <p>The data for this page is provided by NIFC's Wildland Fire Interagency Geospatial Services. The \n        <a href=\"https://data-nifc.opendata.arcgis.com/datasets/nifc::wfigs-last-24-hour-wildland-fire-locations/about\">\n        WFIGS - Last 24 Hour Wildland Fire Locations data set</a><span>*</span> is displayed on the main map and used to generate\n        text alerts. The image generation and text alerts are powered by <a href=\"https://github.com/caseymm/firenearby-service\">\n        github actions</a> and twilio.</p>\n        <p className=\"note\"><span>*</span>In an attempt to only capture fires worthy of a notice, I have filtered the data set \n        to only include points listed as having the \"DiscoveryAcres\" attribute greater than or equal to 1.</p>\n        <p>This project is a prototype. It does not yet (and may no ever, tbd) have a user management system. For now, \n        if you'd like to stop receiving alerts, please email [caseymm @ gmail] or <a href=\"https://twitter.com/caseymmiller\">\n        DM me</a> and I'll remove those alerts for you.</p>\n        <p>I'm hoping to keep working on this and improving it, so please let me know if you find any bugs or have any \n        ideas for improvment. Firenearby is definitely <a href=\"https://github.com/caseymm/fire-nearby\">still a wip</a>.</p>\n      </div>\n    );\n  }\n}\n\nconst About = () => {\n   return(\n    <Details />\n   )\n}\n \nexport default About;","import React from 'react';\nimport {\n  HashRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport './index.scss';\nimport 'dotenv/config'\n\nimport Home from './app-components/home';\nimport Screenshotter from './app-components/screenshotter';\nimport SignUpForm from './app-components/sign-up-form';\nimport Success from './app-components/success';\nimport About from './app-components/About';\n\nexport default class App extends React.PureComponent {\n  render() {\n    return (\n      <HashRouter>\n        <Routes>\n          <Route exact path='/' element={<Home />} />\n          <Route exact path='/sign-up' element={<SignUpForm />} />\n          <Route exact path='/screenshot' element={<Screenshotter />} />\n          <Route exact path='/success' element={<Success />} />\n          <Route exact path='/about' element={<About />} />\n        </Routes>\n      </HashRouter>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.scss';\nimport 'dotenv/config'\nimport App from './App';\n \nReactDOM.render(\n<React.StrictMode>\n  <App />\n</React.StrictMode>,\ndocument.getElementById('root')\n);"],"sourceRoot":""}