{"version":3,"sources":["app-components/home.js","app-components/screenshotter.js","app-components/sign-up-form.js","app-components/success.js","app-components/about.js","App.js","index.js"],"names":["mapboxgl","accessToken","process","Map","Component","constructor","props","super","this","state","lng","lat","zoom","mapContainer","React","createRef","componentDidMount","map","container","current","style","center","scale","ScaleControl","maxWidth","unit","addControl","setUnit","async","resp","fetch","json","loadData","then","console","log","addSource","type","data","addLayer","bounds","turf","fitBounds","padding","duration","render","ref","className","to","Home","params","window","location","hash","replace","split","p","reduce","obj","key","value","returnCoords","string","array","parseFloat","customData","userLoc","customDataFire","fireLoc","on","id","source","layout","paint","decodeURI","userLocName","fireLocName","bboxJson","features","setTimeout","Div","document","createElement","getElementsByClassName","appendChild","postDiv","Screenshotter","mapProps","radius","coordinates","rangeDrawn","dotDrawn","Form","username","phoneNumber","phoneInvalid","mapContainerLocation","handleChange","bind","handleSubmit","event","setState","target","name","length","method","body","JSON","stringify","response","origin","pathname","preventDefault","cooperativeGestures","scrollZoom","disable","geocoder","MapboxGeocoder","countries","marker","testRangeDrawn","removeLayer","removeSource","drawRange","parseInt","circle","steps","units","drawDot","results","result","place_name","flyTo","getElementById","onAdd","querySelector","addEventListener","onSubmit","onChange","min","max","step","SignUpForm","Response","Success","Details","href","About","App","PureComponent","exact","path","element","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.1104b9d3.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport * as turf from '@turf/turf';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -98.78320225360663,\n      lat: 40.45646421496375, \n      zoom: 3.5\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: 'mapbox://styles/caseymmiler/cl11818ga000216ng2az1efhm',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    const scale = new mapboxgl.ScaleControl({\n      maxWidth: 150,\n      unit: 'imperial'\n    });\n    map.addControl(scale);\n      \n    scale.setUnit('imperial');\n\n    async function loadData() {\n      const resp = await fetch('https://firenearby.s3.amazonaws.com/latest.json');\n      const json = await resp.json();\n      return json;\n    }\n\n    loadData().then(json => {\n      // map.on('load', function () {\n      console.log('ran load')\n      map.addSource('data-json', {\n        type: 'geojson',\n        data: json,\n      });\n\n      // console.log(json)\n\n      map.addLayer({\n        'id': 'points',\n        'type': 'symbol',\n        'source': 'data-json',\n        'layout': {\n          'icon-image': 'orange-x-box2',\n          'text-field': ['get', 'IncidentName'],\n          'text-font': [\n            'Ubuntu Mono Bold',\n            'Arial Unicode MS Bold'\n          ],\n          'text-size': 16,\n          'text-offset': [0, 1.25],\n          'text-anchor': 'top',\n          'icon-allow-overlap': true,\n          'text-allow-overlap': false\n        }\n      });\n      \n      const bounds = turf.bbox(json);\n      map.fitBounds(bounds, { padding: 100, duration: 0 });\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.mapContainer} className=\"map-container\" />\n        <div className=\"title\">\n          <h1>Wildfires in the last 24 hours</h1>\n        </div>\n        <div className=\"title-about\">\n          <Link to=\"/sign-up\">\n            <span>Sign up</span>\n          </Link>\n          <Link to=\"/about\">\n            <span>About</span>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Home = (props) => {\n   return(\n    <Map />\n   )\n}\n \nexport default Home;","import React from 'react';\nimport { Component } from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport * as turf from '@turf/turf';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_KEY;\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -98.78320225360663,\n      lat: 40.45646421496375, \n      zoom: 3.5\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: 'mapbox://styles/caseymmiler/cl11818ga000216ng2az1efhm',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    const scale = new mapboxgl.ScaleControl({\n      maxWidth: 150,\n      unit: 'imperial'\n    });\n    map.addControl(scale);\n\n    // ?userLoc=xx,xx&fireLoc=xx,xx\n    const params = window.location.hash\n    .replace('#/screenshot?', '')\n    .split('&')\n    .map((p) => p.split('='))\n    .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\n\n    const returnCoords = (string) => {\n      let array = string.split(',');\n      console.log(array)\n      return [parseFloat(array[0]), parseFloat(array[1])];\n    }\n\n    console.log(params);\n\n    const postDiv = () => {\n      console.log('loaded')\n      // signal done\n      const Div = document.createElement('div');\n      Div.id = 'hidden';\n      document.getElementsByClassName('map-container')[0].appendChild(Div);\n    }\n\n    const customData = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [\n        {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"category\": \"userLoc\"\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": returnCoords(params.userLoc)\n          }\n        }\n      ]\n    };\n\n    const customDataFire = {\n      \"type\": \"FeatureCollection\",\n      \"features\": [\n        {\n          \"type\": \"Feature\",\n          \"properties\": {\n            \"category\": \"fireLoc\"\n          },\n          \"geometry\": {\n            \"type\": \"Point\",\n            \"coordinates\": returnCoords(params.fireLoc)\n          }\n        }\n      ]\n    };\n\n    map.on('load', function () {\n      console.log('ran load')\n\n      map.addSource('data-json', {\n        type: 'geojson',\n        data: customData\n      });\n\n      map.addLayer({\n        id: 'data-json-layer',\n        type: 'circle',\n        source: 'data-json', // reference the data source\n        layout: {},\n        paint: {\n          'circle-radius': 7,\n          'circle-color': '#5444e3',\n          'circle-stroke-color': '#ffffff',\n          'circle-stroke-width': 2\n        },\n      });\n\n      map.addLayer({\n        id: 'data-json-layer-text',\n        type: 'symbol',\n        source: 'data-json', // reference the data source\n        layout: {\n          'text-field': decodeURI(params.userLocName),\n          'text-font': [\n            'Ubuntu Mono Bold',\n            'Arial Unicode MS Bold'\n          ],\n          'text-size': 18,\n          'text-offset': [0, 1],\n          'text-anchor': 'top'\n        }\n      });\n\n      map.addSource('data-json-fire', {\n        type: 'geojson',\n        data: customDataFire\n      });\n\n      // Add a symbol layer\n      map.addLayer({\n        'id': 'points',\n        'type': 'symbol',\n        'source': 'data-json-fire',\n        'layout': {\n          'icon-image': 'orange-x-box2',\n          // get the title name from the source's \"title\" property\n          'text-field': decodeURI(params.fireLocName),\n          'text-font': [\n            'Ubuntu Mono Bold',\n            'Arial Unicode MS Bold'\n          ],\n          'text-size': 18,\n          'text-offset': [0, 1.25],\n          'text-anchor': 'top'\n        }\n      });\n\n      const bboxJson = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [\n          customData.features[0],\n          customDataFire.features[0]\n        ]\n      }\n          \n      const bounds = turf.bbox(bboxJson);\n      map.fitBounds(bounds, { padding: 120, duration: 0 });\n      setTimeout(function(){\n        console.log('posting div');\n        postDiv();\n      }, 5000)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.mapContainer} className=\"map-container\" />\n      </div>\n    );\n  }\n}\n\nconst Screenshotter = (props) => {\n   return(\n    <Map />\n   )\n}\n \nexport default Screenshotter;","import React from 'react';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\nimport * as turf from '@turf/turf';\n\nlet mapProps = {\n  location: '',\n  radius: '20',\n  coordinates: '',\n  rangeDrawn: false,\n  dotDrawn: false\n};\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      location: '',\n      phoneNumber: '',\n      radius: '20',\n      coordinates: '',\n      phoneInvalid: ''\n    };\n\n    this.mapContainerLocation = React.createRef();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    // console.log(event.target.className)\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.state.phoneNumber = this.state.phoneNumber.replace(/[^+\\d]+/g, \"\");\n    this.state.location = mapProps.location;\n    this.state.coordinates = mapProps.coordinates;\n    this.state.radius = mapProps.radius;\n    if(this.state.phoneNumber.length !== 10){\n      console.log('invalid phone number')\n      this.setState({\n        'phoneInvalid': 'invalid'\n      });\n    } else {\n      this.setState({\n        'phoneInvalid': 'valid'\n      });\n      // console.log(this.state)\n      fetch(process.env.REACT_APP_API_URL, {\n        method: 'POST',\n        body: JSON.stringify(this.state),\n      }).then((response) => {\n        window.location = `${window.location.origin}${window.location.pathname}#/success`;\n      });\n    }\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = {\n      lng: -96,\n      lat: 38.9, \n      zoom: 2.35\n    };\n    const map = new mapboxgl.Map({\n      container: this.mapContainerLocation.current,\n      style: 'mapbox://styles/caseymmiler/cl11818ga000216ng2az1efhm',\n      center: [lng, lat],\n      zoom: zoom,\n      cooperativeGestures: true,\n    });\n    map.scrollZoom.disable();\n\n    const scale = new mapboxgl.ScaleControl({\n      maxWidth: 150,\n      unit: 'imperial'\n    });\n    map.addControl(scale);\n    scale.setUnit('imperial');\n\n    const token = process.env.REACT_APP_MAPBOX_KEY;\n    const geocoder = new MapboxGeocoder({\n      accessToken: token,\n      mapboxgl: mapboxgl,\n      countries: 'us, ca, mx',\n      marker: false\n    });\n\n    const testRangeDrawn = () => {\n      if(mapProps.rangeDrawn){\n        map.removeLayer(\"circle-fill\");\n        map.removeSource(\"circleData\");\n        drawRange();\n      } else {\n        mapProps.rangeDrawn = true;\n        drawRange();\n      }\n    }\n\n    const drawRange = () => {\n      const radius = parseInt(mapProps.radius);\n      const options = {\n        steps: 300,\n        units: \"miles\",\n      };\n\n      const circle = turf.circle(mapProps.coordinates, radius, options);\n      map.addSource(\"circleData\", {\n        type: \"geojson\",\n        data: circle\n      });\n\n      map.addLayer({\n          id: \"circle-fill\",\n          type: \"fill\",\n          source: \"circleData\",\n          paint: {\n            \"fill-color\": \"blue\",\n            \"fill-opacity\": 0.15\n          }\n      });\n\n      const bounds = turf.bbox(circle);\n      map.fitBounds(bounds, { padding: 10, duration: 0 });\n    }\n\n    const drawDot = (results) => {\n      mapProps.coordinates = results.result.center;\n      mapProps.location = results.result.place_name.replace(', United States', '');\n      \n      map.addSource('data-json', {\n        type: 'geojson',\n        data: {\n          \"type\": \"FeatureCollection\",\n          \"features\": [\n            {\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": mapProps.coordinates\n              }\n            }\n          ]\n        }\n      });\n\n      map.addLayer({\n        id: 'data-json-layer',\n        type: 'circle',\n        source: 'data-json', // reference the data source\n        layout: {},\n        paint: {\n          'circle-radius': 7,\n          'circle-color': '#5444e3',\n          'circle-stroke-color': '#ffffff',\n          'circle-stroke-width': 2\n        },\n      });\n      map.flyTo({\n        center: mapProps.coordinates,\n      });\n      testRangeDrawn();\n    }\n\n    document.getElementById('geocoder').appendChild(geocoder.onAdd(map));\n    geocoder.on('result', function(results){\n      // console.log('result', results);\n      if(mapProps.dotDrawn){\n        map.removeLayer('data-json-layer');\n        map.removeSource(\"data-json\");\n        drawDot(results);\n      } else {\n        mapProps.dotDrawn = true;\n        drawDot(results);\n      }\n    })\n\n    const range = document.querySelector('.range');\n    range.addEventListener('change', function(event){\n      mapProps.radius = event.target.value;\n      if(mapProps.coordinates.length > 0){\n        testRangeDrawn();\n      }\n    });\n\n    // map.on('load', function () {\n    //   console.log('ran load')\n    // });\n  }\n\n  render() {\n    return (\n      <div className=\"signup\">\n        <h1>Sign up for alerts</h1>\n        <p>Please submit this form to sign up for text alerts of fires near your specified location.</p>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input type=\"text\" name='username' value={this.state.username} onChange={this.handleChange} />\n          </label>\n          <label>\n            Phone number (10 digit US):\n            <input type=\"text\" name='phoneNumber' className={this.state.phoneInvalid} value={this.state.phoneNumber} onChange={this.handleChange} />\n          </label>\n          <label>\n            Address:\n            <div name='location' id=\"geocoder\" className=\"geocoder\" />\n          </label>\n          <label>\n            <div style={{'position': 'relative'}}>\n              Max distance:\n              <div className=\"range-label\">{this.state.radius} {this.state.radius === '1' ? 'mile' : 'miles'}</div>\n            </div> \n            <input type=\"range\" className=\"range\" name=\"radius\" min=\"1\" max=\"100\" value={this.state.radius} onChange={this.handleChange} step=\"1\"></input>\n          </label>\n          <div ref={this.mapContainerLocation} className=\"map-container-location\" />\n          <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst SignUpForm = (props) => {\n   return(\n    <Form />\n   )\n}\n \nexport default SignUpForm;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Response extends React.Component {\n  render() {\n    return (\n      <div className=\"success\">\n        <h1>Success!</h1>\n        <p>You are now signed up to receive alerts. Please reply with \"unsubscribe\" or \"stop\" to stop receiving messages.</p>\n        <p>Feel free to close this page or\n        <Link className=\"home\" to=\"/\">\n         view the map of current fires\n        </Link>.\n        </p>\n      </div>\n    );\n  }\n}\n\nconst Success = () => {\n   return(\n    <Response />\n   )\n}\n \nexport default Success;","import React from 'react';\n\nclass Details extends React.Component {\n  render() {\n    return (\n      <div className=\"about\">\n        <h1>About this project</h1>\n        <p>The data for this page is provided by NIFC's Wildland Fire Interagency Geospatial Services. The <a href=\"https://data-nifc.opendata.arcgis.com/datasets/nifc::wfigs-last-24-hour-wildland-fire-locations/about\">\n        WFIGS - Last 24 Hour Wildland Fire Locations data set</a><span>*</span> is displayed on the main map and used to generate\n        text alerts. The image generation and text alerts are powered by <a href=\"https://github.com/caseymm/firenearby-service\">\n        github actions</a>, AWS (dynamoDB, s3, lambda, & api gateway), and twilio.</p>\n        <p className=\"note\"><span>*</span>This dataset does not include prescribed fires. Additionally, in an attempt to only capture \n        fires worthy of a notice, I have filtered the data set to only include points listed as having the \"DiscoveryAcres\" \n        attribute greater than or equal to 1.</p>\n        <p>This project is a prototype. It does not yet have a user management system. For now, \n        if you'd like to stop receiving alerts please reply to the text thread with \"stop\" or \"unsubscribe.\"\n        If you would like to alter individual alerts, please email [caseymm @ gmail] or <a href=\"https://twitter.com/caseymmiller\">\n        DM me</a> and I'll remove those alerts for you.</p>\n        <p>I'm hoping to keep working on this and improving it, so please let me know if you find any bugs or have any \n        ideas for improvment. Firenearby is definitely <a href=\"https://github.com/caseymm/fire-nearby\">still a wip</a>.</p>\n      </div>\n    );\n  }\n}\n\nconst About = () => {\n   return(\n    <Details />\n   )\n}\n \nexport default About;","import React from 'react';\nimport {\n  HashRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport './index.scss';\nimport 'dotenv/config'\n\nimport Home from './app-components/home';\nimport Screenshotter from './app-components/screenshotter';\nimport SignUpForm from './app-components/sign-up-form';\nimport Success from './app-components/success';\nimport About from './app-components/about';\n\nexport default class App extends React.PureComponent {\n  render() {\n    return (\n      <HashRouter>\n        <Routes>\n          <Route exact path='/' element={<Home />} />\n          <Route exact path='/sign-up' element={<SignUpForm />} />\n          <Route exact path='/screenshot' element={<Screenshotter />} />\n          <Route exact path='/success' element={<Success />} />\n          <Route exact path='/about' element={<About />} />\n        </Routes>\n      </HashRouter>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.scss';\nimport 'dotenv/config'\nimport App from './App';\n \nReactDOM.render(\n<React.StrictMode>\n  <App />\n</React.StrictMode>,\ndocument.getElementById('root')\n);"],"sourceRoot":""}